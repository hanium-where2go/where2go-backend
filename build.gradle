plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'hanium'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//REST API 요청 위한 WebFlux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'

	//JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //이메일
    implementation 'org.springframework.boot:spring-boot-starter-mail' /* 이메일 전송 */

	//Querydsl 추가
	implementation 'com.querydsl:querydsl-core:5.0.0'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Mapstruct
	implementation 'org.mapstruct:mapstruct:1.5.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'
	testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

    //oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //swagger
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2")


	//webSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.webjars:webjars-locator-core'
	implementation 'org.webjars:stomp-websocket:2.3.4'
	implementation 'org.webjars:sockjs-client:1.1.2'
}

tasks.named('test') {
	useJUnitPlatform()
}

task copyPrivate(type: Copy) {
	copy {
		from './security'
		include "*.yml"
		into 'src/main/resources'
	}
}

def querydslSrcDir = 'src/main/generated'

sourceSets {
	main.java.srcDirs += "$projectDir/build/generated"
}

compileJava{
	options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
}

clean {
	delete file(querydslSrcDir)
}